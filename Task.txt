Требуется написать программу на C++ с использованием Qt 5.
Программа представляет собой GUI, основная часть окна которого - список, показывающий имена файлов в директории,
выбранной пользователем; при запуске программы выбранной считается текущая директория запущенной программы.
Должна присутствовать кнопка, открывающая окно выбора директории.
Имена файлов в любой момент времени должны быть отсортированы в алфавитном порядке.
Должны присутствовать элементы управления, позволяющие пользователю удалить файл из выбранной директории,
 или создать новый (пустой) с заданным именем.
Если в выбранной директории удаляется, создаётся, или переименовывается файл не из разрабатываемой программы
 (например, с помощью файлового менеджера операционной системы),
 разрабатываемая программа должна незамедлительно отражать эти изменения.
Сразу при запуске разрабатываемая программа должна запускать второй процесс этой же программы,
 т.е. должно появиться такое же окно GUI, причём окна не должны перекрыться.
 В каждый момент времени оба окна должны отображать полностью идентичное содержимое,
 то есть оно должно быть синхронизировано между двумя процессами программы.
 Размеры окон могут меняться пользователем независимо.
Возможности удаления и создания файлов должны быть в полной мере доступны из второго окна GUI.
Второй процесс программы ни при каких обстоятельствах не должен обращаться к файловой системе.

При любых изменениях пользователем размера окон программы, содержимое окон должно выглядеть эстетично
 (в Вашем понимании), по крайней мере основной список должен занимать всё предоставленное пространство
 за вычетом места для размещения элементов управления.
Все тексты элементов управления - на английском языке.
Оформление элементов управления может быть выполнено в стиле, отличном от стиля по умолчания для
 текущей операционной системы; можете добавить этот "изыск", только если чувствуете желание; это не требование.

Внешний вид GUI должен быть разработан в Qt Creator, т.е. должен присутствовать по крайней мере один файл с расширением .ui.
Чем больше будет использовано возможностей и классов Qt, но меньше возможностей STL и низкоуровневой работы
 с операционной системой - тем лучше. Привлечение других библиотек (кроме Qt) - не допускается.
 Применение QtQuick/QML - не допускается.
Если будут использованы возможности C++11 там, где это уместно, это будет плюсом,
 но заострять на этом внимание и прикладывать чрезмерные усилия для демонстрации знания C++11 не требуется.